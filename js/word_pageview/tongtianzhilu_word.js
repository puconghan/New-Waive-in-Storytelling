var m = [80, 80, 80, 80];
var w = $('.article').width();
w = w - m[1] - m[3] - 50;
var h = 400 - m[0] - m[2];
Array.prototype.max = function() {
	var max = this[0];
	var len = this.length;

	for (var i = 1; i < len; i++) {
		if (this[i] > max) {
			max = this[i];
		}
	}
	return max;
}

//Data array for pageviews
var data1 = [3083, 30606, 49138, 42917, 69025, 65654, 63289, 64200, 62391, 62697, 62159, 77146, 76063, 76412, 80779, 82975, 75276, 70524, 61484, 70222, 62898, 69350, 65927, 71033, 74577, 80878, 85330, 94535, 96590, 96610, 96173, 95688, 93997, 101441, 104406, 98073, 96103, 96134, 99994, 92327, 102328, 110496, 113518, 115369, 123102, 130789, 134137, 132998, 127296, 125192, 120936, 122038, 122781, 115233, 117034, 118589, 119135, 124043, 125192, 124548, 122746, 121126, 120389, 120968, 121770, 117761, 117189, 114169, 118113, 115228, 124480, 120289, 104079, 111215, 121785, 120055, 119229, 129062, 128294, 119419, 123108, 115187, 117925, 128645, 129885, 128400, 126081, 126749, 126641, 127003, 129672, 132024, 130453, 132655, 135609, 145596, 144509, 154401, 107728, 132424, 132852, 130599, 128368, 124239, 119104, 131971, 126120, 108005, 119283, 129217, 126021, 125618, 136491, 115819, 105686, 117063, 118372, 125878, 137287, 130772, 142677, 144882, 133669, 150993, 147991, 149334, 153682, 161163, 156699, 172506, 163776, 171451, 164217, 168477, 155748, 151046, 105994, 158554, 163815, 171807, 162779, 148030, 110192, 138009, 150009, 162938, 163821, 163631, 155028, 137408, 146527, 156417, 151276, 146754, 141997, 135118, 127490, 132329, 140030, 135646, 125016, 110282, 104755, 92687, 112767, 117957, 123065, 117876, 116932, 115601, 110663, 108312, 92307, 100253, 105290, 107677, 109584, 104486, 117497, 116486, 100716, 100096, 119145, 119716, 117120, 119162, 123444, 127047, 121255, 122713, 122240, 118143, 123289, 127069, 130241, 131545, 126573, 126503, 123537, 126845, 128758, 107051, 94180, 84624, 79767, 72283, 71871, 97694, 66637, 77214, 86021, 81921, 71782, 68703, 73343, 74293, 75751, 74204, 72069, 66667, 64365, 65625, 69372, 75661, 69519, 64818, 74234, 74160, 79691, 79736, 100129, 102680, 118839, 128610, 122036, 124246, 127631, 119724, 98003, 102964, 103790, 111034, 137503, 123240, 108742, 120479, 116901, 120369, 122825, 116730, 106198, 124240, 119285, 121808, 115633, 82136, 105774, 92294, 94113, 82583, 91573, 82552, 84574, 87264, 98361, 108226, 114959, 123951, 117945, 134464, 120394, 135713, 142099, 113526, 127906, 130792, 135289, 145715, 126160, 127224, 93627, 130393, 106669, 132824, 120400, 112855, 93857, 134462, 132884, 125510, 125062, 115556, 116593, 129207, 111746, 126746, 127284, 117369, 123491, 117849, 90254, 89922, 71834, 79779, 83144, 63796, 73079, 63988, 47901, 57735, 60554, 74344, 65542, 71650, 68768, 88183, 91089, 106832, 74432, 67238, 97002, 91642, 76250, 84331, 100480, 97261, 91855, 101466, 86830, 94498, 100056, 86660, 99377, 92071, 110671, 109999, 85579, 121042, 96954, 110751, 101294, 105796, 109317, 94393, 87622, 102368, 84234, 103985, 108218, 92079, 20413, 27220, 32430, 31147, 29672, 35080, 32629, 36702, 41870, 34477, 48399, 48477, 46005, 34808, 39556, 42369, 40660, 39239, 40020, 39332, 40059, 30637, 36754, 32478, 30855, 30982, 30046, 31367, 31536, 34461, 34725, 33301, 38385, 40613, 41723, 43532, 44899, 43737, 45789, 49028, 49040, 41631, 48407, 47663, 46943, 47030, 46935, 44644, 45866, 46786, 47180, 45897, 44244, 45652, 44828, 48272, 46275, 46396, 44250, 46012, 45524, 49922, 47150, 46047, 47245, 51478, 44537, 43957, 43343, 41668, 44548, 42954, 42918, 41624, 45576, 55925, 54827, 41910, 46084, 57948, 53168, 49954, 47206, 47915, 35319, 39405, 38831, 44792, 46093, 44656, 45453, 47198, 46648, 49740, 52051, 52018, 51187, 53988, 54779, 56431, 56355, 55826, 57046, 54161, 52841, 57223, 49898, 50117, 49995, 50053, 34023, 26942, 25789, 26312, 25464, 24983, 23138, 22910, 23085, 22336, 21956, 11216, 10581, 9880, 8073, 7664, 7317, 7290, 7735, 7280, 9785, 8350, 8083, 7544, 7494, 8876, 8159, 7033, 6847, 7043, 6408, 6231, 6630, 6450, 5910, 6193, 6296, 6079, 6244, 6965, 6961, 6214, 5730, 5585, 5493, 5154, 5147, 5469, 4818, 5447, 5053, 4845, 4916, 4704, 4560, 4531, 4540, 4434, 4616, 4671, 4831, 4571, 4140, 4383, 5296, 5340, 5517, 5821, 6942, 6786, 6670, 7044, 8206, 7316, 6857, 7324, 7364, 7365, 7499, 7179, 7078, 6545, 6918, 7636, 7375, 7420, 7470, 7521, 7615, 7678, 8680, 8882, 9297, 9116, 8931, 8809, 9032, 8798, 8298, 8383, 7946, 7866, 7129, 7072, 7079, 6938, 6707, 6925, 6680, 6347, 7161, 7195, 6879, 7073, 7248, 7007, 6364, 6416, 6718, 6787, 8025, 8561, 8535, 8044, 8067, 9567, 9767, 9592, 9153, 9736, 9410, 9350, 8397, 8224, 8183, 7649, 7492, 7358, 7108, 7039, 6765, 6631, 6349, 6447, 6646, 6845, 6415, 6212, 7232, 6965, 6639, 6847, 7317, 7090, 7424, 7512, 7511, 7752, 8006, 7644, 7409, 7427, 7873, 7437, 7410, 7295, 6284, 5973, 5822, 5982, 6297, 6272, 6622, 6639, 6057, 6395, 6520, 6403, 6341, 6460, 6398, 6139, 6028, 6102, 6101, 6306, 6246, 6425, 6229, 5836, 6023, 6498, 7295, 7503, 7452, 7111, 6926, 6668, 6607, 6571, 6959, 6740, 6415, 6518, 6591, 6852, 6974, 6848, 6861, 6835, 7019, 6852, 7124];
//Data array for number of daily generated words
var data2 = [0, 12620, 8739, 9962, 10864, 10710, 6860, 8535, 11137, 7884, 7485, 10716, 9257, 11932, 9801, 13410, 10906, 9588, 9296, 9713, 9392, 9656, 9824, 10607, 12970, 9686, 10526, 9278, 9746, 10095, 9916, 10264, 9949, 16519, 9727, 9683, 9465, 13380, 12942, 9503, 9341, 10126, 9615, 9314, 10739, 10238, 13420, 10314, 9731, 10404, 9331, 10364, 9599, 9398, 10154, 8443, 10035, 9734, 9196, 9506, 9468, 9324, 9368, 9357, 9502, 9447, 9827, 9945, 10014, 6422, 9528, 6226, 3040, 6359, 9347, 9982, 9345, 9178, 9529, 6209, 9363, 9368, 9081, 9624, 9954, 9298, 9478, 9600, 6240, 9337, 9214, 9404, 9294, 9618, 6399, 9599, 9496, 10201, 46, 9378, 9450, 12738, 9146, 9310, 9552, 9199, 9399, 9688, 6505, 9289, 9459, 9263, 9533, 3135, 3416, 6174, 6388, 9236, 9249, 9295, 9537, 9301, 3827, 9504, 9250, 10221, 9852, 9434, 6384, 12368, 9725, 9224, 9210, 9798, 3201, 6579, 4109, 6315, 9578, 9755, 9622, 6336, 0, 9523, 9801, 9769, 9427, 9630, 9997, 3180, 10854, 9915, 10257, 9329, 6620, 7397, 6402, 9693, 9502, 10212, 9458, 9511, 6441, 3207, 9997, 9647, 9463, 9294, 9768, 9498, 10072, 9603, 6761, 9373, 9444, 9462, 9713, 9898, 9498, 9644, 9717, 9397, 9742, 9451, 9594, 9213, 10058, 9594, 9553, 9599, 9607, 9492, 9686, 9319, 9734, 10016, 9518, 9614, 10659, 9557, 13268, 9720, 10053, 10358, 9908, 9304, 9717, 9886, 9636, 9420, 9486, 9463, 9544, 10271, 9777, 9832, 9899, 9741, 9888, 9576, 9712, 9671, 9823, 11448, 9901, 9847, 9567, 10713, 10953, 9791, 9816, 10149, 13509, 9648, 9598, 9699, 9626, 9826, 162, 6214, 9717, 9719, 9312, 10049, 8878, 10316, 10291, 9721, 9563, 9582, 10180, 9405, 9343, 10299, 6678, 9605, 9731, 9471, 10359, 9501, 10152, 3336, 3356, 6456, 10227, 10283, 9486, 9887, 6824, 10891, 14645, 10767, 9492, 10051, 10951, 10394, 10233, 9713, 6407, 10103, 9571, 9802, 3167, 9295, 13039, 6645, 9968, 12106, 10075, 10505, 9583, 10430, 9715, 9397, 9750, 9723, 9487, 10845, 9555, 9587, 9773, 9517, 9474, 6443, 9726, 9643, 9879, 9807, 9732, 10705, 9483, 10140, 9737, 9457, 9890, 9676, 10601, 9526, 9315, 9586, 10976, 9941, 10048, 9527, 9609, 9465, 9957, 9456, 9633, 9568, 9492, 3390, 9609, 9739, 9283, 6309, 9812, 13138, 9805, 6857, 9785, 9833, 3208, 7212, 3060, 3305, 6344, 3082, 3156, 9603, 9470, 12913, 9830, 10108, 9374, 9289, 9432, 12956, 10278, 10443, 9743, 10237, 9263, 9712, 16881, 6746, 9584, 9452, 9605, 9571, 13226, 9391, 9389, 9750, 10756, 6744, 6841, 3359, 9269, 6494, 6407, 6604, 6893, 6420, 6588, 6388, 9652, 9640, 9299, 9518, 9513, 10560, 9826, 9418, 6638, 9455, 10845, 9779, 9713, 9523, 9473, 6365, 10449, 9608, 3291, 9437, 9459, 9551, 9791, 10443, 9679, 9230, 10281, 9505, 9233, 10003, 9357, 10169, 9355, 9420, 9316, 9504, 9388, 9781, 9497, 9467, 10305, 9378, 26129, 13230, 9428, 3180, 3188, 43, 9382, 9817, 11134, 9323, 9296, 9627, 9550, 9776, 9685, 9427, 6252, 9899, 9429, 9325, 9343, 9625, 9468, 7017, 6213, 3121, 6288, 11203, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];

var x = d3.scale.linear().domain([0, data1.length]).range([0, w]);

var xlabel = d3.time.scale()
.domain([new Date(new Date("2011-01-13")), d3.time.day.offset(new Date("2012-11-15"), 1)])
.range([0, w]);

var y1 = d3.scale.linear().domain([0, data1.max()]).range([h, 0]);
var y2 = d3.scale.linear().domain([0, data2.max()]).range([h, 0]);

var line1 = d3.svg.line()
	.x(function(d,i) {
		//console.log('Plotting X1 value for data point: ' + d + ' using index: ' + i + ' to be at: ' + x(i) + ' using our xScale.');
		return x(i); 
	})
	.y(function(d) {
		//console.log('Plotting Y1 value for data point: ' + d + ' to be at: ' + y1(d) + " using our y1Scale.");
		return y1(d); 
	})

var line2 = d3.svg.line()
	.x(function(d,i) {
		//console.log('Plotting X2 value for data point: ' + d + ' using index: ' + i + ' to be at: ' + x(i) + ' using our xScale.');
		return x(i); 
	})
	.y(function(d) {
		//console.log('Plotting Y2 value for data point: ' + d + ' to be at: ' + y2(d) + " using our y2Scale.");
		return y2(d); 
	})

var tongtianzhilu_word_pageviews = d3.select("#tongtianzhilu_word_pageviews").append("svg:svg")
	.attr("width", w + m[1] + m[3])
	.attr("height", h + m[0] + m[2] + 30)
	.append("svg:g")
	.attr("transform", "translate(" + m[3] + "," + m[0] + ")");

var xAxis = d3.svg.axis().scale(xlabel).tickSize(-h).tickSubdivide(true);

tongtianzhilu_word_pageviews.append("svg:g")
	.attr("class", "x axis")
	.attr("transform", "translate(0," + h + ")")
	.call(xAxis);

tongtianzhilu_word_pageviews.append("text")
	.attr("class", "bottomlabel")
	.attr("text-anchor", "end")
	.attr("y", h + 50)
	.attr("x", w - 105)
	.attr("dy", ".2em")
	.text("Selected Top Ranked Fantasy Novel: Road Toward Heaven (奇幻玄幻: 通天之路),");

tongtianzhilu_word_pageviews.append("text")
	.attr("class", "bottomlabelauthor")
	.attr("text-anchor", "end")
	.attr("y", h + 70)
	.attr("x", w - 180)
	.attr("dy", ".2em")
	.text("Written by millionaire author: Hui Wang (王辉), Pen name: Wu Zui (无罪).")

var yAxisLeft = d3.svg.axis().scale(y1).ticks(4).orient("left");

tongtianzhilu_word_pageviews.append("svg:g")
	.attr("class", "y axis axisLeft")
	.attr("transform", "translate(-15,0)")
	.call(yAxisLeft);

tongtianzhilu_word_pageviews.append("text")
	.attr("class", "scaleleft")
	.attr("text-anchor", "end")
	.attr("y", 1)
	.attr("dy", ".01em")
	.attr("transform", "rotate(-90)")
	.text("Pageviews");

var yAxisRight = d3.svg.axis().scale(y2).ticks(6).orient("right");

tongtianzhilu_word_pageviews.append("svg:g")
	.attr("class", "y axis axisRight")
	.attr("transform", "translate(" + (w+15) + ",0)")
	.call(yAxisRight);

tongtianzhilu_word_pageviews.append("text")
	.attr("class", "scaleright")
	.attr("text-anchor", "end")
	.attr("y", w)
	.attr("dy", ".01em")
	.attr("transform", "rotate(-90)")
	.text("Number of Words (per day)");

tongtianzhilu_word_pageviews.append("svg:path").attr("d", line1(data1)).attr("class", "data1");
tongtianzhilu_word_pageviews.append("svg:path").attr("d", line2(data2)).attr("class", "data2");