var m = [80, 80, 80, 80];
var w = $('.article').width();
w = w - m[1] - m[3] - 50;
var h = 400 - m[0] - m[2];
Array.prototype.max = function() {
	var max = this[0];
	var len = this.length;

	for (var i = 1; i < len; i++) {
		if (this[i] > max) {
			max = this[i];
		}
	}
	return max;
}


// Data array for pageview
var data1 = [175482, 173921, 178700, 173445, 161303, 183206, 189261, 217394, 212578, 198895, 208623, 198026, 200070, 210005, 202120, 226972, 292047, 284975, 261037, 264295, 270422, 269353, 279135, 331320, 318608, 283991, 277259, 293945, 308135, 305437, 304406, 302415, 293567, 339569, 339286, 318603, 308628, 346517, 380255, 401014, 400551, 374231, 347277, 346659, 352628, 370844, 361397, 344931, 332978, 322979, 316816, 326260, 332066, 373403, 367229, 364258, 336124, 321106, 327089, 321979, 327933, 312738, 297174, 289470, 298910, 288113, 288649, 275576, 277637, 269326, 266297, 270346, 281770, 289829, 286486, 290191, 288483, 284481, 282943, 295527, 291992, 281244, 290836, 304520, 312638, 315248, 340015, 359397, 314658, 301604, 290045, 286285, 279677, 283368, 283455, 283472, 282046, 273739, 264889, 263804, 268360, 272038, 260891, 259681, 264792, 264437, 261575, 263431, 255635, 249191, 240464, 243134, 247868, 249436, 259109, 260240, 255172, 245218, 246684, 257279, 246445, 250681, 253160, 158083, 124375, 103424, 92013, 84288, 79570, 81353, 77501, 86423, 91367, 77134, 72733, 75086, 73187, 78561, 72893, 65001, 61389, 58644, 57300, 56425, 55216, 56025, 57242, 56695, 54606, 52382, 49065, 50394, 46373, 45043, 44081, 44282, 40008, 40695, 39078, 38132, 37556, 35148, 35020, 35007, 35611, 36426, 36385, 42478, 48364, 47425, 53957, 48190, 50320, 48604, 46921, 44851, 43966, 44070, 44526, 43346, 43620, 43827, 42943, 40981, 37430, 39619, 39029, 38970, 48079, 40831, 37650, 40742, 40700, 37518, 35734, 36837, 40780, 37878, 38511, 38254, 35875, 35839, 41012, 41748, 40820, 41776, 40940, 37594, 38706, 46713, 40631, 39482, 40146, 39345, 34579, 34940, 35261, 35055, 36278, 34577, 33946, 32180, 34504, 31709, 31277, 32966, 34396, 34261, 35065, 36156, 35215, 34973, 36506, 40976, 41071, 35887, 38473, 38858, 37412, 40535, 44409, 44536, 41461, 41800, 40481, 39448, 39021, 41847, 43265, 37960, 37131, 38756, 40067, 39809, 41746, 44520, 45984, 45759, 44644, 48365, 45358, 45164, 44856, 41710, 43218, 44381, 44425, 41489, 41245, 41952, 39868, 37437, 37874, 38719, 38276, 40039, 40005, 37065, 36563, 42630, 37110, 37776, 39769, 39497, 36519, 35525, 35092, 36555, 39983, 41987, 43808, 36193, 36513, 38174, 39410, 38374, 36556, 38514, 35384, 34289, 34999, 33570, 32052, 32420, 32501, 33185, 32231, 31748, 32109, 34841, 31627, 30443, 30402, 30155];
// Data array for number of daily generated words
var data2 = [22383, 12734, 9664, 9508, 12541, 15499, 13002, 31854, 9902, 10192, 16246, 10016, 13336, 9772, 9687, 19628, 33127, 13966, 10385, 13289, 13483, 9958, 16454, 32932, 10501, 9914, 9815, 19833, 9689, 10450, 10599, 9891, 10499, 33190, 13693, 9863, 9991, 16503, 13712, 17776, 16792, 16358, 9965, 9929, 9512, 13693, 12581, 9598, 9462, 9399, 9372, 9415, 9533, 16388, 17354, 16141, 15889, 12671, 9365, 9658, 9487, 9442, 9348, 9393, 9417, 9397, 9536, 9492, 9417, 9516, 9385, 9482, 9440, 9488, 9391, 9429, 9373, 9532, 9419, 9398, 9446, 9395, 9427, 9477, 9531, 9511, 9597, 13180, 12690, 9590, 9566, 9385, 9530, 9460, 9528, 9601, 6463, 6250, 6293, 6369, 6366, 6385, 6289, 6298, 6250, 6349, 6460, 6240, 6264, 6271, 6349, 6271, 6248, 6238, 6345, 6343, 6254, 6324, 9167, 9576, 6248, 6544, 38741, 25769, 15874, 9494, 12594, 9717, 9804, 12741, 12625, 19128, 11491, 9459, 9485, 12680, 9494, 9449, 9418, 9385, 9377, 9396, 9551, 9437, 9433, 9398, 9705, 9516, 6457, 6309, 6241, 6212, 6297, 6273, 6240, 6293, 6239, 6245, 6274, 6291, 6280, 6223, 6436, 6317, 6413, 6330, 6255, 6238, 6230, 6260, 6321, 6265, 6734, 6379, 6231, 6377, 6359, 6299, 6244, 6366, 6239, 6279, 6209, 6251, 6262, 6231, 6231, 6253, 6320, 9494, 6213, 6310, 6372, 6302, 6306, 6593, 9995, 6187, 6464, 6207, 6296, 6249, 6247, 6298, 6229, 6261, 6266, 6265, 6657, 9536, 9426, 9343, 9401, 9407, 9399, 9410, 9363, 9389, 9362, 9401, 9354, 9536, 12501, 12506, 12577, 12548, 12629, 12565, 12537, 12630, 12684, 12760, 12537, 12542, 12512, 12657, 6372, 15662, 12534, 12520, 12553, 12661, 12773, 12792, 12567, 12558, 12816, 12527, 12650, 12706, 12582, 12529, 12647, 12520, 12609, 16041, 15977, 18996, 15920, 22285, 16692, 15712, 12662, 12643, 15764, 16052, 12685, 15475, 15833, 15785, 12515, 15890, 16114, 13144, 16026, 16197, 12981, 16032, 9395, 19070, 12580, 15849, 12548, 12616, 14537, 12564, 15835, 12478, 15602, 12764, 15929, 12706, 16009, 12552, 15905, 12588, 9640, 12896, 9541, 12635, 9571, 12653, 9359, 12567, 9503, 9409, 12558, 9438, 12592, 12578, 9392, 9540, 9440, 9423]

var x = d3.scale.linear().domain([0, data1.length]).range([0, w]);

var xlabel = d3.time.scale()
	.domain([new Date(new Date("2012-03-01")), d3.time.day.offset(new Date("2013-01-08"), 1)])
	.range([0, w]);

var y1 = d3.scale.linear().domain([0, data1.max()]).range([h, 0]);
var y2 = d3.scale.linear().domain([0, data2.max()]).range([h, 0]);
 
var line1 = d3.svg.line()
	.x(function(d,i) { 
		//console.log('Plotting X1 value for data point: ' + d + ' using index: ' + i + ' to be at: ' + x(i) + ' using our xScale.');
		return x(i); 
	})
	.y(function(d) { 
		//console.log('Plotting Y1 value for data point: ' + d + ' to be at: ' + y1(d) + " using our y1Scale.");
		return y1(d); 
	})
	
var line2 = d3.svg.line()
	.x(function(d,i) { 
		//console.log('Plotting X2 value for data point: ' + d + ' using index: ' + i + ' to be at: ' + x(i) + ' using our xScale.');
		return x(i); 
	})
	.y(function(d) { 
		//console.log('Plotting Y2 value for data point: ' + d + ' to be at: ' + y2(d) + " using our y2Scale.");
		return y2(d); 
	})
 
 
var shengwang_word_pageviews = d3.select("#shengwang_word_pageviews").append("svg:svg")
      .attr("width", w + m[1] + m[3])
      .attr("height", h + m[0] + m[2] + 30)
      .append("svg:g")
      .attr("transform", "translate(" + m[3] + "," + m[0] + ")");

var xAxis = d3.svg.axis().scale(xlabel).tickSize(-h).tickSubdivide(true);

shengwang_word_pageviews.append("svg:g")
      .attr("class", "x axis")
      .attr("transform", "translate(0," + h + ")")
      .call(xAxis);

shengwang_word_pageviews.append("text")
	.attr("class", "bottomlabel")
	.attr("text-anchor", "end")
	.attr("y", h + 50)
	.attr("x", w - 190)
	.attr("dy", ".2em")
	.text("Selected Top Ranked Fantasy Novel: King of Wisdom (奇幻玄幻: 圣王),");

shengwang_word_pageviews.append("text")
	.attr("class", "bottomlabelauthor")
	.attr("text-anchor", "end")
	.attr("y", h + 70)
	.attr("x", w - 40)
	.attr("dy", ".2em")
	.text("Written by millionaire author: Zhong Wang (王钟), Pen name: Meng Ru Shen Ji (梦入神机).")

var yAxisLeft = d3.svg.axis().scale(y1).ticks(4).orient("left");

shengwang_word_pageviews.append("svg:g")
      .attr("class", "y axis axisLeft")
      .attr("transform", "translate(-15,0)")
      .call(yAxisLeft);
			
shengwang_word_pageviews.append("text")
	.attr("class", "scaleleft")
	.attr("text-anchor", "end")
	.attr("y", 1)
	.attr("dy", ".01em")
	.attr("transform", "rotate(-90)")
	.text("Pageviews");

var yAxisRight = d3.svg.axis().scale(y2).ticks(6).orient("right");

shengwang_word_pageviews.append("svg:g")
	      .attr("class", "y axis axisRight")
	      .attr("transform", "translate(" + (w+15) + ",0)")
	      .call(yAxisRight);
	
shengwang_word_pageviews.append("text")
	.attr("class", "scaleright")
	.attr("text-anchor", "end")
	.attr("y", w)
	.attr("dy", ".01em")
	.attr("transform", "rotate(-90)")
	.text("Number of Words (per day)");

shengwang_word_pageviews.append("svg:path").attr("d", line1(data1)).attr("class", "data1");
shengwang_word_pageviews.append("svg:path").attr("d", line2(data2)).attr("class", "data2");

