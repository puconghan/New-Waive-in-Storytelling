var m = [80, 80, 80, 80];
var w = $('.article').width();
w = w - m[1] - m[3] - 50;
var h = 400 - m[0] - m[2];
Array.prototype.max = function() {
	var max = this[0];
	var len = this.length;

	for (var i = 1; i < len; i++) {
		if (this[i] > max) {
			max = this[i];
		}
	}
	return max;
}

// Data array for pageview
var data1 = [3083, 30606, 49138, 42917, 69025, 65654, 63289, 64200, 62391, 62697, 62159, 77146, 76063, 76412, 80779, 82975, 75276, 70524, 61484, 70222, 62898, 69350, 65927, 71033, 74577, 80878, 85330, 94535, 96590, 96610, 96173, 95688, 93997, 101441, 104406, 98073, 96103, 96134, 99994, 92327, 102328, 110496, 113518, 115369, 123102, 130789, 134137, 132998, 127296, 125192, 120936, 122038, 122781, 115233, 117034, 118589, 119135, 124043, 125192, 124548, 122746, 121126, 120389, 120968, 121770, 117761, 117189, 114169, 118113, 115228, 124480, 120289, 104079, 111215, 121785, 120055, 119229, 129062, 128294, 119419, 123108, 115187, 117925, 128645, 129885, 128400, 126081, 126749, 126641, 127003, 129672, 132024, 130453, 132655, 135609, 145596, 144509, 154401, 107728, 132424, 132852, 130599, 128368, 124239, 119104, 131971, 126120, 108005, 119283, 129217, 126021, 125618, 136491, 115819, 105686, 117063, 118372, 125878, 137287, 130772, 142677, 144882, 133669, 150993, 147991, 149334, 153682, 161163, 156699, 172506, 163776, 171451, 164217, 168477, 155748, 151046, 105994, 158554, 163815, 171807, 162779, 148030, 110192, 138009, 150009, 162938, 163821, 163631, 155028, 137408, 146527, 156417, 151276, 146754, 141997, 135118, 127490, 132329, 140030, 135646, 125016, 110282, 104755, 92687, 112767, 117957, 123065, 117876, 116932, 115601, 110663, 108312, 92307, 100253, 105290, 107677, 109584, 104486, 117497, 116486, 100716, 100096, 119145, 119716, 117120, 119162, 123444, 127047, 121255, 122713, 122240, 118143, 123289, 127069, 130241, 131545, 126573, 126503, 123537, 126845, 128758, 107051, 94180, 84624, 79767, 72283, 71871, 97694, 66637, 77214, 86021, 81921, 71782, 68703, 73343, 74293, 75751, 74204, 72069, 66667, 64365, 65625, 69372, 75661, 69519, 64818, 74234, 74160, 79691, 79736, 100129, 102680, 118839, 128610, 122036, 124246, 127631, 119724, 98003, 102964, 103790, 111034, 137503, 123240, 108742, 120479, 116901, 120369, 122825, 116730, 106198, 124240, 119285, 121808, 115633, 82136, 105774, 92294, 94113, 82583, 91573, 82552, 84574, 87264, 98361, 108226, 114959, 123951, 117945, 134464, 120394, 135713, 142099, 113526, 127906, 130792, 135289, 145715, 126160, 127224, 93627, 130393, 106669, 132824, 120400, 112855, 93857, 134462, 132884, 125510, 125062, 115556, 116593, 129207, 111746, 126746, 127284, 117369, 123491, 117849, 90254, 89922, 71834, 79779, 83144, 63796, 73079, 63988, 47901, 57735, 60554, 74344, 65542, 71650, 68768, 88183, 91089, 106832, 74432, 67238, 97002, 91642, 76250, 84331, 100480, 97261, 91855, 101466, 86830, 94498, 100056, 86660, 99377, 92071, 110671, 109999, 85579, 121042, 96954, 110751, 101294, 105796, 109317, 94393, 87622, 102368, 84234, 103985, 108218, 92079, 20413, 27220, 32430, 31147, 29672, 35080, 32629, 36702, 41870, 34477, 48399, 48477, 46005, 34808, 39556, 42369, 40660, 39239, 40020, 39332, 40059, 30637, 36754, 32478, 30855, 30982, 30046, 31367, 31536, 34461, 34725, 33301, 38385, 40613, 41723, 43532, 44899, 43737, 45789, 49028, 49040, 41631, 48407, 47663, 46943, 47030, 46935, 44644, 45866, 46786, 47180, 45897, 44244, 45652, 44828, 48272, 46275, 46396, 44250, 46012, 45524, 49922, 47150, 46047, 47245, 51478, 44537, 43957, 43343, 41668, 44548, 42954, 42918, 41624, 45576, 55925, 54827, 41910, 46084, 57948, 53168, 49954, 47206, 47915, 35319, 39405, 38831, 44792, 46093, 44656, 45453, 47198, 46648, 49740, 52051, 52018, 51187, 53988, 54779, 56431, 56355, 55826, 57046, 54161, 52841, 57223, 49898, 50117, 49995, 50053, 34023, 26942, 25789, 26312, 25464, 24983, 23138, 22910, 23085, 22336, 21956, 11216, 10581, 9880, 8073, 7664, 7317, 7290, 7735, 7280, 9785, 8350, 8083, 7544, 7494, 8876, 8159, 7033, 6847, 7043, 6408, 6231, 6630, 6450, 5910, 6193, 6296, 6079, 6244, 6965, 6961, 6214, 5730, 5585, 5493, 5154, 5147, 5469, 4818, 5447, 5053, 4845, 4916, 4704, 4560, 4531, 4540, 4434, 4616, 4671, 4831, 4571, 4140, 4383, 5296, 5340, 5517, 5821, 6942, 6786, 6670, 7044, 8206, 7316, 6857, 7324, 7364, 7365, 7499, 7179, 7078, 6545, 6918, 7636, 7375, 7420, 7470, 7521, 7615, 7678, 8680, 8882, 9297, 9116, 8931, 8809, 9032, 8798, 8298, 8383, 7946, 7866, 7129, 7072, 7079, 6938, 6707, 6925, 6680, 6347, 7161, 7195, 6879, 7073, 7248, 7007, 6364, 6416, 6718, 6787, 8025, 8561, 8535, 8044, 8067, 9567, 9767, 9592, 9153, 9736, 9410, 9350, 8397, 8224, 8183, 7649, 7492, 7358, 7108, 7039, 6765, 6631, 6349, 6447, 6646, 6845, 6415, 6212, 7232, 6965, 6639, 6847, 7317, 7090, 7424, 7512, 7511, 7752, 8006, 7644, 7409, 7427, 7873, 7437, 7410, 7295, 6284, 5973, 5822, 5982, 6297, 6272, 6622, 6639, 6057, 6395, 6520, 6403, 6341, 6460, 6398, 6139, 6028, 6102, 6101, 6306, 6246, 6425, 6229, 5836, 6023, 6498, 7295, 7503, 7452, 7111, 6926, 6668, 6607, 6571, 6959, 6740, 6415, 6518, 6591, 6852, 6974, 6848, 6861, 6835, 7019, 6852, 7124];

// Data array for revenue
var data2 = [151280, 85422, 22394, 30586, 340936, 56462, 183502, 6198, 53454, 2866, 24252, 3566, 1964, 3498, 4720, 6574, 9762, 11442, 2166, 11430, 2820, 3964, 53286, 2166, 9586, 3220, 31336, 5208, 4042, 2554, 7308, 3132, 4142, 9736, 4020, 2800, 8132, 5342, 6398, 1100, 3366, 12692, 6574, 4532, 8176, 21638, 13810, 6784, 3332, 5152, 7050, 5062, 5684, 3520, 1966, 4852, 2400, 2000, 8898, 4220, 1832, 7566, 4828, 5172, 10066, 3352, 3298, 1266, 6216, 3452, 6626, 2764, 2454, 1898, 1466, 3752, 6354, 11424, 6006, 4042, 2366, 8464, 8824, 2732, 3430, 1466, 2732, 9914, 3166, 1966, 2720, 2166, 3200, 12340, 10616, 4764, 3998, 3952, 3208, 966, 2176, 1732, 2432, 2354, 1166, 1854, 2320, 1500, 1732, 10856, 2720, 600, 966, 4086, 2032, 13718, 1532, 9788, 966, 1866, 1932, 2998, 6930, 5440, 1898, 2532, 15242, 2820, 2954, 4252, 4008, 5574, 3486, 2598, 2576, 8418, 1000, 2032, 1888, 5764, 5532, 2320, 3220, 666, 5228, 10818, 4786, 1888, 3898, 5386, 3076, 2708, 2364, 2088, 1488, 2120, 1654, 766, 1232, 3864, 1232, 1132, 1066, 200, 9196, 766, 1954, 6186, 3420, 2000, 10742, 2498, 3264, 1398, 1598, 500, 1066, 400, 200, 666, 3320, 1466, 1066, 1366, 3020, 2854, 2198, 3030, 4230, 5964, 2420, 1632, 3220, 2032, 1432, 4166, 3164, 3486, 7116, 6886, 106625, 193115, 162736, 170473, 156914, 147860, 151785, 162875, 177976, 149097, 149816, 140898, 130464, 135635, 143909, 135679, 139998, 131638, 123063, 116845, 122950, 125814, 119794, 120765, 121852, 137899, 121375, 145513, 121235, 125886, 140245, 126425, 122574, 126741, 129008, 128455, 129245, 117097, 42819, 94474, 121733, 161966, 204166, 135948, 116457, 119366, 120675, 128136, 134210, 126205, 131239, 124676, 124657, 124284, 66426, 123979, 122298, 133389, 130939, 134354, 134422, 77131, 70323, 108725, 122182, 139485, 136755, 133053, 116558, 128527, 142839, 139377, 125738, 130854, 123934, 124267, 126750, 133129, 105667, 124086, 127241, 126702, 64388, 114194, 156553, 130179, 121579, 153163, 129580, 126000, 134437, 129636, 124854, 130067, 117642, 131847, 119978, 149986, 133692, 141540, 126339, 114561, 115808, 105153, 120444, 121798, 114999, 117555, 124925, 129227, 109663, 138614, 131779, 121356, 116798, 134113, 128268, 120684, 123135, 119059, 116798, 118630, 125613, 122425, 115431, 111175, 113660, 112098, 109000, 118921, 124986, 65366, 118198, 108632, 113436, 81883, 120673, 138188, 120365, 95316, 114570, 115520, 55267, 96019, 67245, 60959, 77002, 62901, 48817, 103393, 125535, 147535, 145153, 193736, 117065, 135439, 149728, 264729, 113916, 140480, 120978, 127166, 133558, 116406, 171036, 105326, 117142, 111904, 122324, 99448, 148047, 123336, 116906, 109171, 80171, 76210, 83060, 63381, 111901, 79011, 78514, 82639, 77949, 68076, 82248, 97122, 99207, 96185, 115764, 115461, 118308, 123182, 129245, 119117, 93445, 116074, 145826, 137312, 124418, 127406, 141965, 105655, 115590, 109436, 67187, 127334, 119460, 132449, 126175, 142547, 113862, 120318, 106681, 118621, 118169, 141030, 128348, 118485, 115432, 115494, 125492, 120646, 108160, 104437, 122595, 100089, 107814, 110771, 375433, 223071, 128350, 61801, 74106, 48324, 96857, 108655, 116520, 96829, 111001, 120343, 184342, 99272, 101463, 100021, 75387, 104200, 101573, 109032, 119836, 112685, 100380, 85428, 81446, 67980, 73492, 146681, 58267, 42341, 40970, 31630, 39075, 53677, 33854, 20878, 32827, 29561, 28218, 18152, 25837, 15545, 34665, 21037, 16651, 12289, 11245, 25601, 14411, 7368, 21697, 13450, 28066, 19982, 15246, 19103, 14810, 13804, 20147, 12153, 9924, 19374, 3837, 21564, 14046, 16107, 28034, 9919, 17962, 13313, 4923, 8111, 11793, 13865, 15076, 4995, 11495, 3854, 13588, 3912, 4994, 4998, 24925, 8691, 5085, 10513, 15553, 5648, 10695, 8988, 6055, 9977, 3704, 5777, 1896, 1583, 1875, 3465, 2956, 16200, 4337, 16846, 18631, 8664, 10958, 12677, 13279, 17517, 28176, 19068, 10828, 9851, 17989, 3094, 20168, 19840, 18866, 13715, 27760, 14147, 14356, 9046, 13288, 16017, 13308, 11460, 9887, 8542, 34315, 16237, 14678, 27894, 20165, 19051, 11682, 18405, 32449, 17769, 4999, 4631, 7764, 16508, 8624, 14628, 4880, 12978, 21384, 7156, 20287, 6694, 22208, 26502, 6336, 17569, 13373, 29236, 12378, 9401, 15310, 17813, 10533, 5491, 18177, 16753, 5291, 5747, 19884, 5252, 6849, 15540, 2314, 9751, 3602, 14052, 13071, 8357, 12037, 16187, 13603, 16033, 20236, 28977, 23719, 20831, 25339, 10284, 6581, 13337, 21133, 10778, 14540, 9838, 12038, 12474, 10601, 20283, 23052, 11102, 11158, 5894, 15072, 15617, 9712, 5185, 11362, 20250, 20212, 20481, 3266, 12955, 11957, 17151, 13881, 13730, 31656, 6265, 14485, 17164, 14279, 10101, 14471, 8593, 35210, 12696, 9639, 12206, 12106, 6284, 8301, 11907, 2921, 11126, 5206, 13826, 9813, 4445, 6056, 8583, 25755, 6505, 16547, 3754, 10662, 13757, 7860];

var x = d3.scale.linear().domain([0, data1.length]).range([0, w]);

var xlabel = d3.time.scale()
.domain([new Date(new Date("2011-01-13")), d3.time.day.offset(new Date("2012-11-15"), 1)])
.range([0, w]);

var y1 = d3.scale.linear().domain([0, data1.max()]).range([h, 0]);
var y2 = d3.scale.linear().domain([0, data2.max()]).range([h, 0]);

var line1 = d3.svg.line()
	.x(function(d,i) {
		//console.log('Plotting X1 value for data point: ' + d + ' using index: ' + i + ' to be at: ' + x(i) + ' using our xScale.');
		return x(i); 
	})
	.y(function(d) {
		//console.log('Plotting Y1 value for data point: ' + d + ' to be at: ' + y1(d) + " using our y1Scale.");
		return y1(d); 
	})

var line2 = d3.svg.line()
	.x(function(d,i) {
		//console.log('Plotting X2 value for data point: ' + d + ' using index: ' + i + ' to be at: ' + x(i) + ' using our xScale.');
		return x(i); 
	})
	.y(function(d) {
		//console.log('Plotting Y2 value for data point: ' + d + ' to be at: ' + y2(d) + " using our y2Scale.");
		return y2(d); 
	})

var tongtianzhilu_revenue_pageview = d3.select("#tongtianzhilu_revenue_pageview").append("svg:svg")
	.attr("width", w + m[1] + m[3])
	.attr("height", h + m[0] + m[2] + 30)
	.append("svg:g")
	.attr("transform", "translate(" + m[3] + "," + m[0] + ")");

var xAxis = d3.svg.axis().scale(xlabel).tickSize(-h).tickSubdivide(true);

tongtianzhilu_revenue_pageview.append("svg:g")
	.attr("class", "x axis")
	.attr("transform", "translate(0," + h + ")")
	.call(xAxis);

tongtianzhilu_revenue_pageview.append("text")
	.attr("class", "bottomlabel")
	.attr("text-anchor", "end")
	.attr("y", h + 50)
	.attr("x", w - 105)
	.attr("dy", ".2em")
	.text("Selected Top Ranked Fantasy Novel: Road Toward Heaven (奇幻玄幻: 通天之路),");

tongtianzhilu_revenue_pageview.append("text")
	.attr("class", "bottomlabelauthor")
	.attr("text-anchor", "end")
	.attr("y", h + 70)
	.attr("x", w - 180)
	.attr("dy", ".2em")
	.text("Written by millionaire author: Hui Wang (王辉), Pen name: Wu Zui (无罪).")

var yAxisLeft = d3.svg.axis().scale(y1).ticks(4).orient("left");

tongtianzhilu_revenue_pageview.append("svg:g")
	.attr("class", "y axis axisLeft")
	.attr("transform", "translate(-15,0)")
	.call(yAxisLeft);

tongtianzhilu_revenue_pageview.append("text")
	.attr("class", "scaleleft")
	.attr("text-anchor", "end")
	.attr("y", 1)
	.attr("dy", ".01em")
	.attr("transform", "rotate(-90)")
	.text("Pageviews");

var yAxisRight = d3.svg.axis().scale(y2).ticks(6).orient("right");

tongtianzhilu_revenue_pageview.append("svg:g")
	.attr("class", "y axis axisRight")
	.attr("transform", "translate(" + (w+15) + ",0)")
	.call(yAxisRight);

tongtianzhilu_revenue_pageview.append("text")
	.attr("class", "scaleright")
	.attr("text-anchor", "end")
	.attr("y", w)
	.attr("dy", ".01em")
	.attr("transform", "rotate(-90)")
	.text("Revenue");

tongtianzhilu_revenue_pageview.append("svg:path").attr("d", line1(data1)).attr("class", "data1");
tongtianzhilu_revenue_pageview.append("svg:path").attr("d", line2(data2)).attr("class", "data2");