var m = [80, 80, 80, 80];
var w = $('.article').width();
w = w - m[1] - m[3] - 50;
var h = 400 - m[0] - m[2];
Array.prototype.max = function() {
	var max = this[0];
	var len = this.length;

	for (var i = 1; i < len; i++) {
		if (this[i] > max) {
			max = this[i];
		}
	}
	return max;
}

// Data array for pageview
var data1 = [82323, 222540, 210377, 202459, 206653, 239996, 253443, 264996, 247174, 244170, 242899, 246792, 131819, 96276, 101339, 98165, 104540, 110093, 106720, 100875, 106964, 113272, 108867, 113008, 117002, 129597, 130434, 153693, 171020, 150214, 159126, 184526, 182184, 189044, 164845, 212542, 220736, 199104, 221208, 223460, 209282, 195008, 196847, 201224, 180205, 173516, 166119, 171389, 164501, 185100, 166880, 168961, 180047, 174517, 191056, 178722, 191908, 169706, 184325, 173823, 193388, 186479, 194757, 188845, 182578, 186267, 184327, 177904, 201769, 205398, 187693, 216746, 193818, 206809, 231974, 214678, 221816, 234837, 235415, 246129, 250757, 240742, 239288, 237480, 241863, 238783, 230579, 228899, 241991, 248578, 254282, 264176, 241531, 232190, 245376, 228893, 238330, 250819, 280467, 269153, 260499, 245263, 264056, 248151, 271868, 264078, 257620, 284054, 290654, 289135, 298073, 317665, 328968, 327618, 300976, 331812, 345567, 352206, 357679, 364272, 351420, 336888, 347869, 358304, 351502, 347498, 359483, 337814, 344321, 355375, 369615, 362421, 375167, 395397, 383013, 376976, 394166, 365868, 367900, 369845, 365509, 367787, 356290, 348208, 351774, 349984, 344284, 357149, 336552, 332987, 372396, 366193, 372732, 393626, 398933, 387111, 386375, 402118, 401154, 411851, 394284, 404175, 404399, 391966, 394380, 404116, 418004, 410794, 408696, 428886, 411155, 413696, 423027, 437803, 453189, 470677, 463927, 457484, 452846, 461493, 454335, 480603, 486341, 459741, 450908, 440304, 432351, 429895, 403295, 417885, 427707, 429958, 445080, 406366, 444282, 430938, 416547, 409553, 402588, 361293, 392403, 389073, 392534, 412599, 447815, 463240, 485772, 486044, 510260, 500717, 487079, 483958, 505322, 508365, 513593, 512698, 511526, 525634, 443698, 489851, 475166, 502363, 553719, 608748, 628691, 605044, 593573, 593673, 579365, 571938, 593644, 619595, 621410, 597305, 597219, 586480, 600650, 627866, 638438, 615614, 639028, 698161, 740215, 725711, 722126, 716145, 671603, 688686, 724498, 708886, 699070, 694468, 695464, 674989, 682857, 659584, 669435, 715356, 684699, 675918, 663009, 583425, 673946, 675634, 682308, 687412, 655983, 623503, 603891, 603474, 592784, 595673, 684896, 682645, 647553, 640589, 642349, 623090, 619018, 577817, 584300, 580002, 568333, 533595, 543599, 529775, 474825, 614604, 623862, 583682, 595350, 634701, 634623, 639681, 652215, 622826, 617346, 615659, 590221, 628338, 639737, 640770, 593093, 593410, 587601, 598265, 610405, 615579, 634096, 604819, 623229, 623256, 610798, 616224, 624796, 631417, 614587, 621775, 610809, 600345, 608213, 626627, 630722, 646708, 648382, 660500, 691356, 684114, 687819, 696958, 731439, 690619, 652442, 612064, 587233, 579784, 600558, 580838, 587074, 560627, 544164, 543501, 547405, 545213, 534484, 533572, 526043, 530611, 512702, 547994, 532529, 514874, 496459, 498516, 486904, 484335, 467177, 472319, 474552, 385712, 386117, 493063, 475995, 476242, 496660, 560959, 555676, 509463, 511401, 514273, 500051, 509084, 520369, 470198, 551491, 560047, 553661, 537475, 538909, 567623, 581770, 574945, 579290, 595787, 507488, 623359, 609083, 587450, 569818, 563254, 576871, 559766, 557038, 568704, 563613, 569123, 583738, 586912, 577840, 581217, 599237, 594706, 610229, 601983, 609442, 600809, 619434, 636640, 623860, 606166, 577736, 586198, 577266, 595634, 580233, 553745, 546169, 496534, 483154, 531360, 541264, 553228, 419472, 496965, 548221, 558362, 535427, 535439, 529823, 534218, 543476, 547055, 516511, 513473, 524238, 525603, 484196, 535511, 541458, 563417, 503305, 462825, 503929, 491040, 479364, 483313, 486914, 490656, 497378, 479303, 483251, 495852, 503052, 519776, 542535, 556704, 526920, 525748, 498639, 510954, 517363, 518489, 518974, 502369, 506440, 515284, 509105, 527168, 545956, 550874, 514970, 502453, 498206, 487213, 506502, 519768, 516180, 506575, 500426, 492110, 490596, 493964, 507059, 531658, 536987, 532625, 527257, 520080, 528086, 549631, 545285, 492636, 472109, 488249, 479639, 488936, 499155, 486417, 462143, 454804, 445127, 449261, 450478, 459277, 456338, 434985, 440245, 443194, 434768, 442325, 461136, 454222, 440982, 440357, 423603, 432228, 433745, 454283, 463286, 400934, 444576, 449884, 438703, 428342, 426375, 430494, 418760, 446632, 399707, 343084, 384203, 436650, 423267, 389515, 387501, 388249, 379172, 378923, 385472, 395830, 393219, 387153, 393216, 392627, 383573, 379363, 372977, 367816, 356711, 344854, 343758, 327960, 300962, 265639, 292328, 280572, 276007, 287133, 309359, 321564, 333857, 350591, 366300, 376216, 390866, 396717, 395142, 353300, 172368, 123906, 102822, 93900, 90250, 86298, 82375, 75265, 74289, 73830, 73044, 74549, 76560, 72287, 67933, 67720, 69183, 67956, 70862, 73227, 70629, 71578, 72056, 74979, 111681, 83652, 83433, 78259, 67542, 66965, 63278, 62874, 63905, 65065, 63927, 59212, 59484, 58072, 57870, 60327, 63677, 62543, 56716, 56129, 56116, 56284, 58068, 58676, 57859, 53203, 52584, 53191, 52671, 54100, 53364, 58447, 52957, 51023, 51339, 48786, 49135, 50206, 50496, 47838, 48420, 45772, 48686, 48210, 50347, 49424, 45741, 46005, 46281, 45925, 49450, 51250, 50829, 46176, 48093, 50864, 48127, 48133, 50394, 49905, 49218, 47589, 44574, 43921, 44911, 46211, 46508, 43459, 42757, 41603, 41207, 42189, 47244, 45965, 43207, 43782, 42892, 41773, 43038, 44802, 42537, 39641, 39024, 38067, 38291, 38667, 43466, 40660, 37461, 36668, 36209, 35585, 36206, 36572, 35886, 33784, 34969, 35322, 38316, 36003, 36928, 34440, 32878, 33008, 32347, 32641, 32162, 32464, 32538, 30899, 31315, 31343, 32391, 32817, 35190, 35965, 35141, 35102, 35027, 38000, 38340, 38927, 38797, 38640, 38905, 38292, 38445, 39053, 35630, 35496, 37100, 36395, 37135, 36801, 36201, 34049, 34597, 37539, 37422, 37858, 37408, 37520, 35645, 36030, 36693, 36993, 37378, 37003, 37038, 33946, 32970, 34082, 34383, 33777, 33821, 33293, 31465, 32035, 34117, 33317, 34100, 34797, 33788, 32079, 32699, 34454, 34683, 37611, 39169, 39381, 37069, 36420, 38818, 38825, 37879, 36604, 36163, 35340, 34489, 36339, 37275, 36929, 35655, 36175, 33166, 32931, 31365, 31276, 30756, 30782, 30816, 32140, 30739, 29274, 29188, 29164, 29365, 29697, 30356, 29802, 27852, 28876, 28903, 28348, 30011, 31126, 30420, 28410, 28324, 29069, 29940, 28673, 27808, 26414, 25169, 25555, 25460, 25967, 26107, 26011, 25780, 24579, 24695, 24137, 23415, 24737, 25498, 25018, 23462, 23939, 23127, 23064, 23733, 24827, 24686, 23382, 23015, 23436, 28247, 32345, 33396, 33458, 32959, 32690, 31981, 31826, 32385, 33390, 32395, 30482, 30700, 31699, 32081, 32934, 33997, 32539, 30655, 31311, 30949, 31388];
// Data array for subscription
var data2 = [3216, 4813, 3012, 1647, 1618, 1271, 1379, 1132, 819, 701, 648, 591, 524, 607, 579, 586, 643, 697, 657, 607, 619, 623, 706, 766, 668, 602, 568, 736, 862, 673, 646, 760, 965, 2154, 1317, 1145, 839, 675, 703, 642, 600, 654, 577, 583, 591, 472, 500, 483, 462, 449, 395, 400, 383, 396, 402, 412, 426, 334, 392, 469, 534, 440, 445, 403, 389, 339, 352, 387, 359, 415, 383, 344, 341, 412, 435, 411, 499, 449, 457, 453, 546, 547, 466, 425, 474, 392, 363, 405, 366, 399, 426, 419, 337, 299, 338, 310, 379, 389, 465, 378, 382, 396, 325, 314, 372, 372, 370, 468, 385, 742, 545, 501, 525, 446, 445, 442, 433, 577, 567, 537, 448, 491, 407, 447, 400, 438, 475, 523, 415, 415, 456, 425, 469, 532, 429, 377, 432, 398, 412, 424, 535, 409, 321, 387, 362, 379, 368, 416, 343, 331, 397, 346, 358, 398, 355, 346, 333, 384, 345, 386, 382, 398, 377, 363, 364, 495, 566, 519, 575, 528, 419, 476, 393, 454, 552, 535, 513, 506, 474, 458, 456, 540, 538, 429, 415, 379, 432, 370, 343, 366, 391, 376, 382, 606, 582, 486, 487, 427, 429, 324, 372, 400, 458, 460, 559, 538, 525, 672, 646, 550, 630, 508, 546, 553, 563, 574, 573, 809, 556, 606, 639, 727, 644, 788, 894, 826, 808, 716, 630, 646, 749, 804, 744, 661, 613, 598, 677, 739, 667, 637, 700, 913, 978, 792, 834, 748, 677, 710, 862, 791, 697, 751, 666, 598, 614, 569, 619, 741, 692, 694, 671, 609, 701, 657, 599, 647, 677, 608, 459, 479, 437, 472, 909, 778, 567, 512, 561, 507, 487, 763, 478, 458, 507, 425, 461, 426, 454, 541, 561, 554, 552, 508, 470, 471, 500, 409, 435, 429, 445, 538, 563, 580, 448, 451, 452, 467, 479, 500, 550, 447, 484, 450, 449, 440, 465, 511, 407, 424, 596, 556, 517, 584, 518, 496, 559, 514, 552, 532, 563, 542, 14451, 22306, 13270, 9576, 7391, 6917, 6181, 5359, 4494, 3964, 3517, 3555, 3759, 3393, 2862, 2777, 2728, 2691, 2521, 2971, 2827, 2384, 2136, 2125, 2009, 2100, 1889, 1846, 1751, 2018, 2019, 2335, 2248, 4273, 4402, 3705, 2900, 2277, 2211, 2296, 2237, 2245, 2273, 1950, 2439, 2469, 2399, 2416, 2168, 2421, 2579, 2335, 2326, 2435, 1926, 2459, 2312, 2098, 2184, 2206, 2209, 2035, 2103, 1923, 1960, 1886, 1968, 2075, 2004, 2024, 2005, 1971, 2006, 1906, 1974, 2042, 2131, 2046, 2089, 1977, 1804, 1906, 1892, 1918, 1788, 1457, 1512, 1424, 1473, 1699, 1819, 1734, 1302, 1420, 1719, 1890, 1592, 1575, 1558, 1483, 1500, 2008, 1548, 1624, 1498, 1454, 1294, 1463, 1411, 1481, 1491, 1275, 1500, 1385, 1316, 1315, 1294, 1288, 1327, 1206, 1210, 1297, 1409, 1585, 1784, 1754, 1468, 1432, 1307, 1375, 1455, 1511, 1499, 1462, 1309, 1444, 1352, 1541, 1902, 1716, 1524, 1402, 1385, 1355, 1623, 1845, 1631, 1464, 1410, 1285, 1311, 1359, 1551, 1561, 1611, 1528, 1583, 1529, 1620, 1800, 1687, 1289, 1183, 1285, 1326, 1319, 1402, 1370, 1142, 1117, 1041, 1054, 1055, 1119, 1121, 927, 957, 1022, 932, 958, 1130, 1112, 1035, 1039, 931, 893, 916, 1077, 1077, 1005, 986, 994, 996, 923, 996, 983, 899, 908, 939, 920, 1015, 1079, 1093, 929, 809, 937, 858, 949, 1033, 1058, 996, 1002, 1047, 1060, 1040, 1040, 976, 938, 868, 820, 782, 872, 738, 643, 682, 761, 730, 844, 834, 947, 900, 963, 997, 950, 1104, 1014, 1022, 1082, 914, 749, 607, 517, 537, 577, 491, 477, 457, 481, 462, 478, 508, 463, 422, 441, 454, 463, 450, 489, 486, 401, 434, 413, 557, 494, 578, 500, 400, 360, 334, 405, 382, 396, 394, 388, 388, 367, 351, 376, 426, 423, 364, 376, 364, 353, 384, 384, 383, 330, 300, 303, 339, 319, 321, 355, 363, 324, 347, 283, 303, 321, 334, 319, 272, 259, 275, 299, 339, 319, 257, 257, 266, 262, 285, 337, 330, 294, 337, 338, 301, 284, 319, 296, 329, 267, 278, 239, 260, 300, 286, 268, 256, 237, 234, 259, 318, 304, 337, 310, 284, 245, 274, 286, 249, 234, 245, 245, 204, 245, 298, 263, 230, 221, 221, 185, 190, 224, 256, 215, 184, 224, 238, 229, 234, 227, 231, 191, 173, 192, 175, 191, 198, 180, 167, 169, 181, 185, 199, 187, 241, 222, 230, 230, 269, 238, 250, 281, 264, 260, 236, 221, 230, 236, 218, 227, 228, 223, 230, 186, 201, 197, 233, 218, 211, 250, 174, 206, 220, 226, 224, 218, 241, 207, 199, 186, 197, 202, 211, 202, 200, 173, 209, 175, 192, 190, 185, 196, 168, 206, 195, 217, 166, 127, 139, 122, 143, 140, 118, 114, 113, 117, 122, 103, 121, 111, 124, 121, 109, 120, 93, 101, 85, 91, 93, 109, 105, 81, 78, 91, 90, 99, 100, 106, 82, 107, 97, 85, 97, 104, 124, 90, 80, 82, 105, 80, 91, 96, 89, 95, 161, 97, 97, 95, 87, 72, 56, 67, 54, 81, 87, 84, 78, 78, 63, 68, 81, 95, 104, 62, 74, 72, 71, 81, 96, 86, 75, 82, 84, 76, 97, 102, 100, 82, 87, 73, 77, 96, 102, 91, 67, 75, 111, 76];

var x = d3.scale.linear().domain([0, data1.length]).range([0, w]);

var xlabel = d3.time.scale()
	.domain([new Date(new Date("2012-03-01")), d3.time.day.offset(new Date("2013-01-08"), 1)])
	.range([0, w]);

var y1 = d3.scale.linear().domain([0, data1.max()]).range([h, 0]);
var y2 = d3.scale.linear().domain([0, data2.max()]).range([h, 0]);
 
var line1 = d3.svg.line()
	.x(function(d,i) { 
		//console.log('Plotting X1 value for data point: ' + d + ' using index: ' + i + ' to be at: ' + x(i) + ' using our xScale.');
		return x(i); 
	})
	.y(function(d) { 
		//console.log('Plotting Y1 value for data point: ' + d + ' to be at: ' + y1(d) + " using our y1Scale.");
		return y1(d); 
	})
	
var line2 = d3.svg.line()
	.x(function(d,i) { 
		//console.log('Plotting X2 value for data point: ' + d + ' using index: ' + i + ' to be at: ' + x(i) + ' using our xScale.');
		return x(i); 
	})
	.y(function(d) { 
		//console.log('Plotting Y2 value for data point: ' + d + ' to be at: ' + y2(d) + " using our y2Scale.");
		return y2(d); 
	})
 
 
var yongsheng_subscription_pageviews = d3.select("#yongsheng_subscription_pageviews").append("svg:svg")
      .attr("width", w + m[1] + m[3])
      .attr("height", h + m[0] + m[2] + 30)
      .append("svg:g")
      .attr("transform", "translate(" + m[3] + "," + m[0] + ")");

var xAxis = d3.svg.axis().scale(xlabel).tickSize(-h).tickSubdivide(true);

yongsheng_subscription_pageviews.append("svg:g")
      .attr("class", "x axis")
      .attr("transform", "translate(0," + h + ")")
      .call(xAxis);

yongsheng_subscription_pageviews.append("text")
	.attr("class", "bottomlabel")
	.attr("text-anchor", "end")
	.attr("y", h + 50)
	.attr("x", w - 220)
	.attr("dy", ".2em")
	.text("Selected Top Ranked Fantasy Novel: Yong Sheng (奇幻玄幻: 永生),");

yongsheng_subscription_pageviews.append("text")
	.attr("class", "bottomlabelauthor")
	.attr("text-anchor", "end")
	.attr("y", h + 70)
	.attr("x", w - 40)
	.attr("dy", ".2em")
	.text("Written by millionaire author: Zhong Wang (王钟), Pen name: Meng Ru Shen Ji (梦入神机).")

var yAxisLeft = d3.svg.axis().scale(y1).ticks(4).orient("left");

yongsheng_subscription_pageviews.append("svg:g")
      .attr("class", "y axis axisLeft")
      .attr("transform", "translate(-15,0)")
      .call(yAxisLeft);
			
yongsheng_subscription_pageviews.append("text")
	.attr("class", "scaleleft")
	.attr("text-anchor", "end")
	.attr("y", 1)
	.attr("dy", ".01em")
	.attr("transform", "rotate(-90)")
	.text("Pageviews");

var yAxisRight = d3.svg.axis().scale(y2).ticks(6).orient("right");

yongsheng_subscription_pageviews.append("svg:g")
	      .attr("class", "y axis axisRight")
	      .attr("transform", "translate(" + (w+15) + ",0)")
	      .call(yAxisRight);
	
yongsheng_subscription_pageviews.append("text")
	.attr("class", "scaleright")
	.attr("text-anchor", "end")
	.attr("y", w)
	.attr("dy", ".01em")
	.attr("transform", "rotate(-90)")
	.text("Subscriptions");

yongsheng_subscription_pageviews.append("svg:path").attr("d", line1(data1)).attr("class", "data1");
yongsheng_subscription_pageviews.append("svg:path").attr("d", line2(data2)).attr("class", "data2");

