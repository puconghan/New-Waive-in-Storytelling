var m = [80, 80, 80, 80];
var w = $('.article').width();
w = w - m[1] - m[3] - 50;
var h = 400 - m[0] - m[2];
Array.prototype.max = function() {
	var max = this[0];
	var len = this.length;

	for (var i = 1; i < len; i++) {
		if (this[i] > max) {
			max = this[i];
		}
	}
	return max;
}

// Data array for pageview
var data1 = [3083, 30606, 49138, 42917, 69025, 65654, 63289, 64200, 62391, 62697, 62159, 77146, 76063, 76412, 80779, 82975, 75276, 70524, 61484, 70222, 62898, 69350, 65927, 71033, 74577, 80878, 85330, 94535, 96590, 96610, 96173, 95688, 93997, 101441, 104406, 98073, 96103, 96134, 99994, 92327, 102328, 110496, 113518, 115369, 123102, 130789, 134137, 132998, 127296, 125192, 120936, 122038, 122781, 115233, 117034, 118589, 119135, 124043, 125192, 124548, 122746, 121126, 120389, 120968, 121770, 117761, 117189, 114169, 118113, 115228, 124480, 120289, 104079, 111215, 121785, 120055, 119229, 129062, 128294, 119419, 123108, 115187, 117925, 128645, 129885, 128400, 126081, 126749, 126641, 127003, 129672, 132024, 130453, 132655, 135609, 145596, 144509, 154401, 107728, 132424, 132852, 130599, 128368, 124239, 119104, 131971, 126120, 108005, 119283, 129217, 126021, 125618, 136491, 115819, 105686, 117063, 118372, 125878, 137287, 130772, 142677, 144882, 133669, 150993, 147991, 149334, 153682, 161163, 156699, 172506, 163776, 171451, 164217, 168477, 155748, 151046, 105994, 158554, 163815, 171807, 162779, 148030, 110192, 138009, 150009, 162938, 163821, 163631, 155028, 137408, 146527, 156417, 151276, 146754, 141997, 135118, 127490, 132329, 140030, 135646, 125016, 110282, 104755, 92687, 112767, 117957, 123065, 117876, 116932, 115601, 110663, 108312, 92307, 100253, 105290, 107677, 109584, 104486, 117497, 116486, 100716, 100096, 119145, 119716, 117120, 119162, 123444, 127047, 121255, 122713, 122240, 118143, 123289, 127069, 130241, 131545, 126573, 126503, 123537, 126845, 128758, 107051, 94180, 84624, 79767, 72283, 71871, 97694, 66637, 77214, 86021, 81921, 71782, 68703, 73343, 74293, 75751, 74204, 72069, 66667, 64365, 65625, 69372, 75661, 69519, 64818, 74234, 74160, 79691, 79736, 100129, 102680, 118839, 128610, 122036, 124246, 127631, 119724, 98003, 102964, 103790, 111034, 137503, 123240, 108742, 120479, 116901, 120369, 122825, 116730, 106198, 124240, 119285, 121808, 115633, 82136, 105774, 92294, 94113, 82583, 91573, 82552, 84574, 87264, 98361, 108226, 114959, 123951, 117945, 134464, 120394, 135713, 142099, 113526, 127906, 130792, 135289, 145715, 126160, 127224, 93627, 130393, 106669, 132824, 120400, 112855, 93857, 134462, 132884, 125510, 125062, 115556, 116593, 129207, 111746, 126746, 127284, 117369, 123491, 117849, 90254, 89922, 71834, 79779, 83144, 63796, 73079, 63988, 47901, 57735, 60554, 74344, 65542, 71650, 68768, 88183, 91089, 106832, 74432, 67238, 97002, 91642, 76250, 84331, 100480, 97261, 91855, 101466, 86830, 94498, 100056, 86660, 99377, 92071, 110671, 109999, 85579, 121042, 96954, 110751, 101294, 105796, 109317, 94393, 87622, 102368, 84234, 103985, 108218, 92079, 20413, 27220, 32430, 31147, 29672, 35080, 32629, 36702, 41870, 34477, 48399, 48477, 46005, 34808, 39556, 42369, 40660, 39239, 40020, 39332, 40059, 30637, 36754, 32478, 30855, 30982, 30046, 31367, 31536, 34461, 34725, 33301, 38385, 40613, 41723, 43532, 44899, 43737, 45789, 49028, 49040, 41631, 48407, 47663, 46943, 47030, 46935, 44644, 45866, 46786, 47180, 45897, 44244, 45652, 44828, 48272, 46275, 46396, 44250, 46012, 45524, 49922, 47150, 46047, 47245, 51478, 44537, 43957, 43343, 41668, 44548, 42954, 42918, 41624, 45576, 55925, 54827, 41910, 46084, 57948, 53168, 49954, 47206, 47915, 35319, 39405, 38831, 44792, 46093, 44656, 45453, 47198, 46648, 49740, 52051, 52018, 51187, 53988, 54779, 56431, 56355, 55826, 57046, 54161, 52841, 57223, 49898, 50117, 49995, 50053, 34023, 26942, 25789, 26312, 25464, 24983, 23138, 22910, 23085, 22336, 21956, 11216, 10581, 9880, 8073, 7664, 7317, 7290, 7735, 7280, 9785, 8350, 8083, 7544, 7494, 8876, 8159, 7033, 6847, 7043, 6408, 6231, 6630, 6450, 5910, 6193, 6296, 6079, 6244, 6965, 6961, 6214, 5730, 5585, 5493, 5154, 5147, 5469, 4818, 5447, 5053, 4845, 4916, 4704, 4560, 4531, 4540, 4434, 4616, 4671, 4831, 4571, 4140, 4383, 5296, 5340, 5517, 5821, 6942, 6786, 6670, 7044, 8206, 7316, 6857, 7324, 7364, 7365, 7499, 7179, 7078, 6545, 6918, 7636, 7375, 7420, 7470, 7521, 7615, 7678, 8680, 8882, 9297, 9116, 8931, 8809, 9032, 8798, 8298, 8383, 7946, 7866, 7129, 7072, 7079, 6938, 6707, 6925, 6680, 6347, 7161, 7195, 6879, 7073, 7248, 7007, 6364, 6416, 6718, 6787, 8025, 8561, 8535, 8044, 8067, 9567, 9767, 9592, 9153, 9736, 9410, 9350, 8397, 8224, 8183, 7649, 7492, 7358, 7108, 7039, 6765, 6631, 6349, 6447, 6646, 6845, 6415, 6212, 7232, 6965, 6639, 6847, 7317, 7090, 7424, 7512, 7511, 7752, 8006, 7644, 7409, 7427, 7873, 7437, 7410, 7295, 6284, 5973, 5822, 5982, 6297, 6272, 6622, 6639, 6057, 6395, 6520, 6403, 6341, 6460, 6398, 6139, 6028, 6102, 6101, 6306, 6246, 6425, 6229, 5836, 6023, 6498, 7295, 7503, 7452, 7111, 6926, 6668, 6607, 6571, 6959, 6740, 6415, 6518, 6591, 6852, 6974, 6848, 6861, 6835, 7019, 6852, 7124];
// Data array for subscription
var data2 = [427, 2635, 2652, 1386, 1004, 743, 684, 599, 530, 493, 478, 633, 563, 552, 665, 581, 516, 507, 354, 372, 294, 338, 368, 415, 386, 488, 503, 493, 550, 545, 599, 552, 521, 523, 540, 416, 428, 426, 635, 505, 600, 636, 616, 534, 591, 615, 641, 558, 530, 508, 443, 492, 552, 413, 450, 392, 371, 441, 499, 518, 387, 374, 380, 389, 418, 393, 429, 341, 351, 386, 401, 400, 340, 391, 336, 326, 381, 308, 353, 372, 343, 349, 335, 338, 373, 299, 323, 383, 332, 282, 306, 280, 279, 350, 394, 356, 338, 350, 296, 306, 308, 259, 260, 247, 218, 202, 246, 228, 252, 747, 314, 1147, 287, 1240, 1057, 1351, 250, 235, 783, 775, 286, 306, 304, 278, 270, 636, 296, 608, 605, 653, 554, 289, 251, 262, 273, 266, 271, 263, 252, 3382, 2852, 1610, 1047, 1193, 1156, 1232, 1010, 957, 954, 779, 794, 774, 806, 726, 657, 631, 624, 591, 557, 503, 522, 468, 506, 483, 483, 524, 505, 514, 468, 459, 492, 492, 373, 399, 431, 408, 446, 444, 397, 421, 414, 421, 480, 1737, 1953, 686, 610, 555, 532, 430, 512, 480, 473, 528, 561, 512, 512, 510, 522, 532, 1223, 1028, 701, 520, 516, 492, 497, 764, 588, 457, 397, 380, 327, 352, 338, 362, 337, 279, 289, 281, 274, 278, 289, 1675, 1296, 2108, 757, 862, 300, 273, 239, 294, 278, 299, 295, 294, 326, 294, 311, 283, 266, 300, 285, 363, 324, 321, 438, 1712, 314, 269, 291, 1553, 302, 397, 638, 256, 274, 263, 248, 4039, 209, 221, 232, 238, 241, 236, 241, 216, 211, 244, 288, 228, 243, 286, 231, 223, 251, 233, 242, 231, 189, 208, 203, 190, 200, 222, 170, 190, 203, 206, 201, 197, 183, 245, 178, 196, 241, 216, 227, 220, 204, 189, 170, 176, 200, 180, 183, 158, 180, 196, 188, 179, 161, 181, 176, 166, 158, 176, 171, 151, 141, 164, 129, 126, 157, 170, 138, 155, 161, 130, 126, 123, 150, 158, 162, 147, 117, 126, 131, 142, 125, 133, 149, 148, 124, 138, 137, 114, 125, 106, 124, 112, 103, 106, 125, 131, 113, 114, 136, 113, 109, 115, 116, 128, 147, 133, 135, 136, 111, 130, 106, 129, 104, 88, 84, 103, 105, 102, 102, 114, 125, 135, 144, 133, 136, 155, 148, 162, 172, 197, 193, 177, 181, 160, 174, 171, 166, 161, 168, 170, 155, 179, 167, 156, 172, 158, 163, 146, 158, 166, 136, 132, 156, 154, 153, 157, 170, 145, 145, 151, 140, 106, 115, 118, 112, 131, 145, 123, 146, 151, 119, 142, 133, 146, 137, 131, 150, 123, 111, 100, 114, 133, 134, 135, 137, 141, 115, 159, 140, 135, 119, 159, 161, 147, 130, 141, 130, 138, 131, 137, 108, 110, 108, 98, 113, 95, 109, 89, 91, 77, 67, 76, 65, 77, 65, 74, 58, 56, 55, 49, 62, 69, 75, 61, 73, 88, 76, 59, 60, 62, 46, 52, 69, 58, 51, 57, 54, 55, 56, 58, 48, 40, 41, 44, 44, 46, 55, 47, 37, 50, 35, 40, 44, 42, 29, 39, 45, 39, 36, 43, 41, 46, 40, 42, 52, 46, 41, 54, 59, 46, 60, 49, 59, 58, 58, 56, 56, 71, 182, 65, 56, 55, 49, 54, 63, 54, 57, 74, 61, 69, 87, 84, 80, 79, 78, 60, 68, 69, 81, 88, 77, 80, 80, 58, 50, 60, 59, 60, 50, 54, 62, 60, 64, 54, 54, 50, 56, 60, 70, 58, 57, 79, 52, 45, 58, 61, 68, 81, 64, 62, 70, 60, 63, 64, 44, 52, 56, 50, 55, 47, 55, 52, 42, 42, 49, 48, 52, 48, 60, 50, 58, 54, 53, 47, 50, 45, 42, 52, 44, 37, 67, 51, 38, 62, 32, 39, 28, 43, 43, 43, 48, 52, 56, 43, 48, 44, 38, 38, 47, 38, 41, 42, 41, 44, 37, 46, 40, 51, 39, 42, 36, 35, 30, 50, 48, 43, 33, 32, 31, 34, 35, 39, 44, 35, 34, 37, 40, 55, 40, 42, 34, 43, 47];

var x = d3.scale.linear().domain([0, data1.length]).range([0, w]);

var xlabel = d3.time.scale()
.domain([new Date(new Date("2011-01-13")), d3.time.day.offset(new Date("2012-11-15"), 1)])
.range([0, w]);

var y1 = d3.scale.linear().domain([0, data1.max()]).range([h, 0]);
var y2 = d3.scale.linear().domain([0, data2.max()]).range([h, 0]);

var line1 = d3.svg.line()
	.x(function(d,i) {
		//console.log('Plotting X1 value for data point: ' + d + ' using index: ' + i + ' to be at: ' + x(i) + ' using our xScale.');
		return x(i); 
	})
	.y(function(d) {
		//console.log('Plotting Y1 value for data point: ' + d + ' to be at: ' + y1(d) + " using our y1Scale.");
		return y1(d); 
	})

var line2 = d3.svg.line()
	.x(function(d,i) {
		//console.log('Plotting X2 value for data point: ' + d + ' using index: ' + i + ' to be at: ' + x(i) + ' using our xScale.');
		return x(i); 
	})
	.y(function(d) {
		//console.log('Plotting Y2 value for data point: ' + d + ' to be at: ' + y2(d) + " using our y2Scale.");
		return y2(d); 
	})

var tongtianzhilu_subscription_pageviews = d3.select("#tongtianzhilu_subscription_pageviews").append("svg:svg")
	.attr("width", w + m[1] + m[3])
	.attr("height", h + m[0] + m[2] + 30)
	.append("svg:g")
	.attr("transform", "translate(" + m[3] + "," + m[0] + ")");

var xAxis = d3.svg.axis().scale(xlabel).tickSize(-h).tickSubdivide(true);

tongtianzhilu_subscription_pageviews.append("svg:g")
	.attr("class", "x axis")
	.attr("transform", "translate(0," + h + ")")
	.call(xAxis);

tongtianzhilu_subscription_pageviews.append("text")
	.attr("class", "bottomlabel")
	.attr("text-anchor", "end")
	.attr("y", h + 50)
	.attr("x", w - 105)
	.attr("dy", ".2em")
	.text("Selected Top Ranked Fantasy Novel: Road Toward Heaven (奇幻玄幻: 通天之路),");

tongtianzhilu_subscription_pageviews.append("text")
	.attr("class", "bottomlabelauthor")
	.attr("text-anchor", "end")
	.attr("y", h + 70)
	.attr("x", w - 180)
	.attr("dy", ".2em")
	.text("Written by millionaire author: Hui Wang (王辉), Pen name: Wu Zui (无罪).")

var yAxisLeft = d3.svg.axis().scale(y1).ticks(4).orient("left");

tongtianzhilu_subscription_pageviews.append("svg:g")
	.attr("class", "y axis axisLeft")
	.attr("transform", "translate(-15,0)")
	.call(yAxisLeft);

tongtianzhilu_subscription_pageviews.append("text")
	.attr("class", "scaleleft")
	.attr("text-anchor", "end")
	.attr("y", 1)
	.attr("dy", ".01em")
	.attr("transform", "rotate(-90)")
	.text("Pageviews");

var yAxisRight = d3.svg.axis().scale(y2).ticks(6).orient("right");

tongtianzhilu_subscription_pageviews.append("svg:g")
	.attr("class", "y axis axisRight")
	.attr("transform", "translate(" + (w+15) + ",0)")
	.call(yAxisRight);

tongtianzhilu_subscription_pageviews.append("text")
	.attr("class", "scaleright")
	.attr("text-anchor", "end")
	.attr("y", w)
	.attr("dy", ".01em")
	.attr("transform", "rotate(-90)")
	.text("Subscriptions");

tongtianzhilu_subscription_pageviews.append("svg:path").attr("d", line1(data1)).attr("class", "data1");
tongtianzhilu_subscription_pageviews.append("svg:path").attr("d", line2(data2)).attr("class", "data2");